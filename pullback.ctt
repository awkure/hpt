module pullback where

import proto
import path
import equiv

pullback (A B C : U) (f : A -> C) (g : B -> C) : U = (a : A) * (b : B) * Path C (f a) (g b)

kernel  (A B : U) (f : A -> B) : U = pullback A A B f f
hofiber (A B : U) (f : A -> B) (y : B) : U = pullback A unit B f (\(x : unit) -> y)

pb1 (A B C: U) (f: A -> C) (g: B -> C): pullback A B C f g -> A = \(x: pullback A B C f g) -> x.1
pb2 (A B C: U) (f: A -> C) (g: B -> C): pullback A B C f g -> B = \(x: pullback A B C f g) -> x.2.1
-- pb3 (A B C: U) (f: A -> C) (g: B -> C): (x: pullback A B C f g) -> Path C (f x.1) (g x.2.1)
